{"version":3,"sources":["images/Logo-white.svg","components/Header.js","contexts/CurrentUserContext.js","components/Card.js","components/Spinner/Spinner.js","components/Main.js","components/Footer.js","components/ImagePopup.js","utils/api.js","components/PopupWithForm.js","components/EditProfilePopup.js","components/EditAvatarPopup.js","components/AddPlacePopup.js","components/ConfirmDeletePopup.js","components/Login.js","components/Register.js","components/InfoTooltip.js","components/ProtectedRoute.js","utils/auth.js","components/App.js","reportWebVitals.js","index.js"],"names":["Header","email","onSignOut","loggedIn","useState","isClicked","setIsClicked","windowWidth","setWindowWidth","resizeWindow","window","innerWidth","handleClickMenu","useEffect","addEventListener","removeEventListener","className","alt","src","logo","path","to","exact","type","onClick","CurrentUserContext","React","createContext","Card","card","likeCounter","onCardClick","onCardDelete","onCardLike","currentUser","useContext","isOwn","owner","_id","cardDeleteButtonClassName","isLiked","likes","some","i","cardLikeButtonClassName","link","title","name","loading","Spinner","Main","onEditAvatar","onEditProfile","onAddPlace","cards","about","avatar","id","map","length","Footer","Date","getFullYear","ImagePopup","onClose","isOpen","element","api","data","this","_baseUrl","serverUrl","_token","token","res","ok","json","Promise","reject","status","statusText","fetch","headers","authorization","then","_requestResult","method","body","JSON","stringify","cardId","PopupWithForm","children","onSubmit","submitText","noValidate","EditProfilePopup","onUpdateUser","isDataLoad","profileName","setProfileName","profileDescription","setDescription","e","preventDefault","value","onChange","target","placeholder","required","maxLength","EditAvatarPopup","onUpdateAvatar","avatarRef","useRef","current","ref","AddPlacePopup","onAddCard","placeName","setPlaceName","placeLink","setPlaceLink","minLength","ConfirmDeletePopup","onDeleteCard","Login","onLogin","password","profileData","setProfileData","handleChange","autoComplete","Register","onRegister","InfoTooltip","successful","ProtectedRoute","Component","component","props","baseUrl","App","history","useHistory","isEditProfilePopupOpen","setEditProfilePopupOpen","isAddPlacePopupOpen","setAddPlacePopupOpen","isEditAvatarPopupOpen","setEditAvatarPopupOpen","isCardDelete","setIsCardDelete","isInfoTooltipShow","setInfoTooltipShow","setCards","setLoggedIn","profileEmail","setProfileEmail","setIsDataLoad","isLoading","setIsLoading","setCurrentUser","selectedCard","setSelectedCard","selectedCardDelete","setSelectedCardDelete","handleInfoTooltip","closeAllPopups","jwt","localStorage","getItem","push","catch","err","console","log","getUserInfo","finally","getInitialCards","initialCards","Provider","removeItem","changeCardLike","newCard","state","c","auth","setItem","newUserData","editProfile","addNewCard","newAvatar","editAvatar","deleteCard","newCards","filter","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8deb5220.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/Logo-white.1f1e9591.svg\";","import React, { useState, useEffect } from \"react\";\r\nimport logo from '../images/Logo-white.svg';\r\nimport { Link, Route } from 'react-router-dom';\r\n\r\nfunction Header({ email, onSignOut, loggedIn }) {\r\n  //* Состояния\r\n  const [isClicked, setIsClicked] = useState(false);\r\n  const [windowWidth, setWindowWidth] = useState(0);\r\n\r\n  //* Проверка ширины окна просмотра, если больше 767 то бургер-меню считается открытым. \r\n  //* Без контроля ширины окна просмотра, если в мобильной версии закрыть бургер меню и развернуть большой экран, то поле имейла и кнопка имеют display: none;\r\n  let resizeWindow = () => {\r\n    setWindowWidth(window.innerWidth);\r\n    if(windowWidth >= 767) {\r\n      setIsClicked(true);\r\n    } \r\n  };\r\n\r\n //* Проверка ширины окна при монтировании компонентов\r\n  useEffect(() => {\r\n    resizeWindow();\r\n    window.addEventListener(\"resize\", resizeWindow);\r\n    return () => window.removeEventListener(\"resize\", resizeWindow);\r\n  }, [resizeWindow]);\r\n\r\n  function handleClickMenu() {\r\n    setIsClicked(!isClicked)\r\n  }\r\n\r\n  return (\r\n    <header className=\"header\">\r\n      <img className=\"header__logo\" alt=\"Логотип\" src={logo} />\r\n      <Route path=\"/sign-in\">\r\n        <Link to='sign-up' className={`${loggedIn ? 'header__link' : 'header__link header__link_login'}`}>Регистрация</Link>\r\n      </Route>\r\n      <Route path=\"/sign-up\">\r\n        <Link to='sign-in' className={`${loggedIn ? 'header__link' : 'header__link header__link_login'}`}>Войти</Link>\r\n      </Route>\r\n      <Route exact path=\"/\">\r\n        <div className='header__burger-menu'>\r\n          <button type=\"button\" className={`${isClicked ? 'header__button header__button_close' : 'header__button header__button_burger'}`} onClick={handleClickMenu}>\r\n          <span></span>\r\n          </button>\r\n        </div>\r\n        <div className={`${isClicked ? 'header__user-menu' : 'not-active'}`}>\r\n          <p className='header__email'>{email}</p>\r\n          <button\r\n            onClick={() => {\r\n              onSignOut();\r\n              handleClickMenu();\r\n            }}\r\n            className='header__link header__link_button'>Выйти</button>\r\n        </div>\r\n      </Route>\r\n    </header>\r\n  )\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\n\r\nconst CurrentUserContext = React.createContext();\r\n\r\nexport default CurrentUserContext;","import React, { useContext } from \"react\";\r\nimport CurrentUserContext from '../contexts/CurrentUserContext';\r\n\r\nfunction Card({ card, likeCounter, onCardClick, onCardDelete, onCardLike }) {\r\n\r\n  const currentUser = useContext(CurrentUserContext);\r\n\r\n  //* Определяем, являемся ли мы владельцем текущей карточки\r\n  const isOwn = card.owner._id === currentUser._id;\r\n\r\n  //* Создаём переменную, которую после зададим в `className` для кнопки удаления\r\n  const cardDeleteButtonClassName = (\r\n    `elements__delete-button ${isOwn ? 'elements__delete-button_visible' : 'elements__delete-button_hidden'}`\r\n  );\r\n\r\n  //* Определяем, есть ли у карточки лайк, поставленный текущим пользователем\r\n  const isLiked = card.likes.some(i => i._id === currentUser._id);\r\n\r\n  //* Создаём переменную, которую после зададим в `className` для кнопки лайка\r\n  const cardLikeButtonClassName = (\r\n    `elements__like-button ${isLiked ? 'elements__like-button_active heartbeat' : ''}`\r\n  );\r\n\r\n  function handleClick() {\r\n    onCardClick(card);\r\n  }\r\n\r\n  function handleLikeClick() {\r\n    onCardLike(card)\r\n  }\r\n\r\n  function handleDeleteClick() {\r\n    onCardDelete(card)\r\n  }\r\n\r\n  return (\r\n    <li className=\"elements__list-item\">\r\n      <img\r\n        src={card.link}\r\n        className=\"elements__picture\"\r\n        title=\"Посмотреть фотографию\"\r\n        alt={card.name}\r\n        onClick={handleClick}\r\n        loading=\"lazy\"\r\n      />\r\n      <div className=\"elements__container\">\r\n        <h2 className=\"elements__text\">{card.name}</h2>\r\n        <button\r\n          type=\"button\"\r\n          title=\"Удалить карточку\"\r\n          className={cardDeleteButtonClassName}\r\n          onClick={handleDeleteClick}\r\n        ></button>\r\n        <div className=\"elements__like-container\">\r\n          <button\r\n            type=\"button\"\r\n            className={cardLikeButtonClassName}\r\n            onClick={handleLikeClick}\r\n          ></button>\r\n          <span className=\"elements__like-counter\">{likeCounter}</span>\r\n        </div>\r\n      </div>\r\n    </li>\r\n  );\r\n}\r\n\r\nexport default Card;","import React from 'react'\r\nimport './spinner.css'\r\n\r\nconst Spinner = () => {\r\n  return (\r\n    <div className=\"loadingio-spinner-double-ring-av4fvvi9jcd\">\r\n      <div className=\"ldio-0fi3zkedlx1c\">\r\n        <div></div>\r\n        <div></div>\r\n        <div><div></div></div>\r\n        <div><div></div></div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Spinner;","import React, { useContext } from \"react\";\r\nimport Card from \"./Card\";\r\nimport CurrentUserContext from '../contexts/CurrentUserContext';\r\nimport Spinner from './Spinner/Spinner';\r\n\r\nfunction Main({ onEditAvatar, onEditProfile, onAddPlace, onCardClick, onCardDelete, onCardLike, cards, loading }) {\r\n\r\n  const { name, about, avatar } = useContext(CurrentUserContext);\r\n\r\n  return (\r\n    <main className=\"content\">\r\n      { loading ? <Spinner /> :\r\n        <>\r\n          <section className=\"profile\">\r\n            <div className=\"profile__avatar-edit\">\r\n              <img\r\n                className=\"profile__avatar\"\r\n                title=\"Аватар профиля\"\r\n                src={avatar}\r\n                alt=\"Аватар\"\r\n              />\r\n              <button\r\n                title=\"Загрузить новый аватар\"\r\n                className=\"profile__avatar-edit-button\"\r\n                onClick={onEditAvatar}\r\n              ></button>\r\n            </div>\r\n            <div className=\"profile__info\">\r\n              <h1 id=\"profile__name\" className=\"profile__name\">\r\n                {name}\r\n              </h1>\r\n              <p id=\"profile__job\" className=\"profile__job\">\r\n                {about}\r\n              </p>\r\n              <button\r\n                type=\"button\"\r\n                title=\"Редактировать профиль\"\r\n                className=\"profile__edit-button\"\r\n                onClick={onEditProfile}\r\n              ></button>\r\n            </div>\r\n            <button\r\n              type=\"button\"\r\n              title=\"Добавить новую фотографию\"\r\n              className=\"profile__add-button\"\r\n              onClick={onAddPlace}\r\n            ></button>\r\n          </section>\r\n          <section className=\"elements\">\r\n            <ul className=\"elements__list\">\r\n              {cards.map((card) => (\r\n                <Card\r\n                  key={card._id}\r\n                  card={card}\r\n                  onCardClick={onCardClick}\r\n                  onCardDelete={onCardDelete}\r\n                  likeCounter={card.likes.length}\r\n                  onCardLike={onCardLike}\r\n                />\r\n              ))}\r\n            </ul>\r\n          </section>\r\n        </>}\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default Main;\r\n","import React from \"react\";\r\n\r\nfunction Footer() {\r\n  return (\r\n    <footer className=\"footer\">\r\n      <p className=\"footer__author\">\r\n        &copy; {new Date().getFullYear()} Kirill Shashichev 🤍 Яндекс Практикум\r\n    </p>\r\n    </footer>\r\n  )\r\n}\r\n\r\nexport default Footer;\r\n","import React from \"react\";\r\n\r\nfunction ImagePopup({ card, onClose }) {\r\n\r\n  return (\r\n    <div className={`popup ${card.isOpen && 'popup_opened'}`}>\r\n      <div className=\"popup__fullScreen\">\r\n        <div className=\"popup__image-desription\">\r\n          <img\r\n            className=\"popup__image\"\r\n            src={`${card.element.link || ''}`}\r\n            alt={card.element.name}\r\n          />\r\n          <p className=\"popup__image-subtitle\">{card.element.name}</p>\r\n          <button type=\"button\" onClick={onClose} className=\"popup__close-button\"></button>\r\n        </div>\r\n      </div>\r\n      <div onClick={onClose} className=\"popup__overlay\"></div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ImagePopup;","//* Класс для взаимодействия с сервером\r\nclass Api {\r\n  constructor(data) {\r\n    this._baseUrl = data.serverUrl;\r\n    this._token = data.token;\r\n  }\r\n\r\n  //* Проверка статуса запроса\r\n  _requestResult(res) {\r\n    if (res.ok) {\r\n      return res.json();\r\n    } else {\r\n      return Promise.reject(\r\n        `Что-то пошло не так: Ошибка ${res.status} - ${res.statusText}`\r\n      );\r\n    }\r\n  }\r\n\r\n  //* Запрос данных пользователя\r\n  getUserInfo() {\r\n    return fetch(`${this._baseUrl}/users/me`, {\r\n      headers: {\r\n        authorization: this._token,\r\n      },\r\n    }).then((res) => this._requestResult(res));\r\n  }\r\n\r\n  //* Запрос изначальных карточек\r\n  getInitialCards() {\r\n    return fetch(`${this._baseUrl}/cards`, {\r\n      headers: {\r\n        authorization: this._token,\r\n      },\r\n    }).then((res) => this._requestResult(res));\r\n  }\r\n\r\n  editAvatar(data) {\r\n    return fetch(`${this._baseUrl}/users/me/avatar`, {\r\n      method: \"PATCH\",\r\n      headers: {\r\n        authorization: this._token,\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        avatar: data,\r\n      }),\r\n    }).then((res) => this._requestResult(res));\r\n  }\r\n\r\n  //* Запрос на редактирование данных пользователя\r\n  editProfile(data) {\r\n    return fetch(`${this._baseUrl}/users/me`, {\r\n      method: \"PATCH\",\r\n      headers: {\r\n        authorization: this._token,\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        name: data.name,\r\n        about: data.about,\r\n      }),\r\n    }).then((res) => this._requestResult(res));\r\n  }\r\n\r\n  //* Запрос на добавление карточки\r\n  addNewCard(data) {\r\n    return fetch(`${this._baseUrl}/cards`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        authorization: this._token,\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        name: data.name,\r\n        link: data.link,\r\n      }),\r\n    }).then((res) => this._requestResult(res));\r\n  }\r\n\r\n  //* Запрос на удаление карточки\r\n  deleteCard(data) {\r\n    return fetch(`${this._baseUrl}/cards/${data}`, {\r\n      method: \"DELETE\",\r\n      headers: {\r\n        authorization: this._token,\r\n      },\r\n    }).then((res) => this._requestResult(res));\r\n  }\r\n\r\n  //* Запрос на добавление или удаление лайка карточки\r\n  changeCardLike(cardId, isLiked) {\r\n    return fetch(`${this._baseUrl}/cards/likes/${cardId}`, {\r\n      method: !isLiked ? \"PUT\" : \"DELETE\",\r\n      headers: {\r\n        authorization: this._token,\r\n      },\r\n    }).then((res) => this._requestResult(res));\r\n  }\r\n}\r\n\r\nconst api = new Api({\r\n  serverUrl: \"https://mesto.nomoreparties.co/v1/cohort-19\",\r\n  token: \"4fc24223-fbb6-4e5b-bedd-d51fcb2b9911\",\r\n});\r\n\r\nexport default api;","import React from \"react\";\r\n\r\nfunction PopupWithForm({ id, isOpen, name, children, title, onClose, onSubmit, submitText }) {\r\n\r\n  return (\r\n    <div id={id} className={`popup ${isOpen && 'popup_opened'}`}>\r\n      <form name={name} className=\"popup__form\" onSubmit={onSubmit} noValidate>\r\n        <fieldset className=\"popup__set\">\r\n          <p className=\"popup__title\">{title}</p>\r\n          {children}\r\n          <button type=\"submit\" className=\"popup__button\">\r\n            {submitText}\r\n          </button>\r\n        </fieldset>\r\n        <button type=\"button\" onClick={onClose} className=\"popup__close-button\"></button>\r\n      </form>\r\n      <div onClick={onClose} className=\"popup__overlay\"></div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PopupWithForm;\r\n","import React, { useState, useContext, useEffect } from 'react';\r\nimport PopupWithForm from \"./PopupWithForm\";\r\nimport CurrentUserContext from '../contexts/CurrentUserContext';\r\n\r\nfunction EditProfilePopup({ isOpen, onClose, onUpdateUser, isDataLoad }) {\r\n    const [profileName, setProfileName] = useState('');\r\n    const [profileDescription, setDescription] = useState('');\r\n\r\n    const currentUser = useContext(CurrentUserContext);\r\n\r\n    const { name, about } = currentUser;\r\n\r\n    function handleChangeName(e) {\r\n        setProfileName(e.target.value);\r\n    }\r\n\r\n    function handleChangeDescription(e) {\r\n        setDescription(e.target.value);\r\n    }\r\n\r\n    function handleSubmit(e) {\r\n        e.preventDefault();\r\n\r\n        //* Передаём значения управляемых компонентов во внешний обработчик\r\n        onUpdateUser({\r\n            name: profileName,\r\n            about: profileDescription,\r\n        });\r\n    }\r\n\r\n    useEffect(() => {\r\n        setProfileName(name);\r\n        setDescription(about);\r\n    }, [currentUser]);\r\n\r\n    return (\r\n        <PopupWithForm\r\n            name=\"profile\"\r\n            id=\"editProfile\"\r\n            title=\"Редактировать профиль\"\r\n            isOpen={isOpen}\r\n            onClose={onClose}\r\n            onSubmit={handleSubmit}\r\n            submitText={isDataLoad ? 'Сохраняем...' : 'Сохранить профиль'}\r\n        >\r\n            <label className=\"popup__form-field\">\r\n                <input\r\n                    value={profileName || ''} onChange={handleChangeName}\r\n                    name=\"name\"\r\n                    placeholder=\"Имя\"\r\n                    required\r\n                    maxLength=\"40\"\r\n                    className=\"popup__input\"\r\n                    id=\"popup__name-input\"\r\n                    type=\"text\"\r\n                />\r\n                <span\r\n                    id=\"popup__name-input-error\"\r\n                    className=\"popup__input-error\"\r\n                ></span>\r\n            </label>\r\n            <label className=\"popup__form-field\">\r\n                <input\r\n                    value={profileDescription || ''} onChange={handleChangeDescription}\r\n                    name=\"job\"\r\n                    placeholder=\"Профессия\"\r\n                    required\r\n                    maxLength=\"200\"\r\n                    className=\"popup__input\"\r\n                    id=\"popup__job-input\"\r\n                    type=\"text\"\r\n                />\r\n                <span\r\n                    id=\"popup__job-input-error\"\r\n                    className=\"popup__input-error\"\r\n                ></span>\r\n            </label>\r\n        </PopupWithForm>\r\n    )\r\n}\r\n\r\nexport default EditProfilePopup;","import React, { useRef } from 'react';\r\nimport PopupWithForm from \"./PopupWithForm\";\r\n\r\nfunction EditAvatarPopup({ isOpen, onClose, onUpdateAvatar, isDataLoad }) {\r\n\r\n    const avatarRef = useRef(); //* записываем объект, возвращаемый хуком, в переменную\r\n\r\n    function handleSubmit(e) {\r\n        e.preventDefault();\r\n\r\n        onUpdateAvatar(\r\n            avatarRef.current.value,\r\n        );\r\n    }\r\n\r\n    return (\r\n        <PopupWithForm\r\n            name=\"updateAvatar\"\r\n            id=\"update\"\r\n            title=\"Обновить аватар\"\r\n            isOpen={isOpen}\r\n            onClose={onClose}\r\n            onSubmit={handleSubmit}\r\n            submitText={isDataLoad ? 'Обновляем...' : 'Обновить'}\r\n        >\r\n            <label className=\"popup__form-field\">\r\n                <input\r\n                    ref={avatarRef}\r\n                    name=\"avatar\"\r\n                    className=\"popup__input\"\r\n                    id=\"popup__avatarLink-input\"\r\n                    required\r\n                    placeholder=\"Ссылка на изображение\"\r\n                    type=\"url\"\r\n                />\r\n                <span\r\n                    id=\"popup__avatarLink-input-error\"\r\n                    className=\"popup__input-error\"\r\n                ></span>\r\n            </label>\r\n        </PopupWithForm>\r\n    )\r\n}\r\n\r\nexport default EditAvatarPopup;","import React, { useState } from 'react';\r\nimport PopupWithForm from \"./PopupWithForm\";\r\n\r\nfunction AddPlacePopup({ isOpen, onClose, onAddCard, isDataLoad }) {\r\n\r\n    const [placeName, setPlaceName] = useState('');\r\n    const [placeLink, setPlaceLink] = useState('');\r\n\r\n\r\n    function handleChangePlaceName(e) {\r\n        setPlaceName(e.target.value);\r\n    }\r\n\r\n    function handleChangePlaceLink(e) {\r\n        setPlaceLink(e.target.value);\r\n    }\r\n\r\n    function handleSubmit(e) {\r\n        e.preventDefault();\r\n\r\n        //* Передаём значения управляемых компонентов во внешний обработчик\r\n        onAddCard({\r\n            name: placeName,\r\n            link: placeLink,\r\n        });\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        setPlaceName('');\r\n        setPlaceLink('');\r\n    }, [isOpen]);\r\n\r\n    return (\r\n        <PopupWithForm\r\n            isOpen={isOpen}\r\n            onClose={onClose}\r\n            onSubmit={handleSubmit}\r\n            name=\"newCard\"\r\n            id=\"addCard\"\r\n            title=\"Новое место\"\r\n            submitText={isDataLoad ? 'Добавляем...' : 'Добавить карточку'}\r\n        >\r\n            <label className=\"popup__form-field\">\r\n                <input\r\n                    value={placeName} onChange={handleChangePlaceName}\r\n                    name=\"placeName\"\r\n                    className=\"popup__input\"\r\n                    id=\"popup__placeName-input\"\r\n                    required\r\n                    minLength=\"1\"\r\n                    maxLength=\"30\"\r\n                    placeholder=\"Название карточки\"\r\n                    type=\"text\"\r\n                />\r\n                <span\r\n                    id=\"popup__placeName-input-error\"\r\n                    className=\"popup__input-error\"\r\n                ></span>\r\n            </label>\r\n            <label className=\"popup__form-field\">\r\n                <input\r\n                    value={placeLink} onChange={handleChangePlaceLink}\r\n                    name=\"placeLink\"\r\n                    className=\"popup__input\"\r\n                    id=\"popup__placeLink-input\"\r\n                    required\r\n                    placeholder=\"Ссылка на картинку\"\r\n                    type=\"url\"\r\n                />\r\n                <span\r\n                    id=\"popup__placeLink-input-error\"\r\n                    className=\"popup__input-error\"\r\n                ></span>\r\n            </label>\r\n        </PopupWithForm>\r\n    )\r\n}\r\n\r\nexport default AddPlacePopup;","import React from 'react';\r\nimport PopupWithForm from \"./PopupWithForm\";\r\n\r\nfunction ConfirmDeletePopup({ isOpen, onClose, isDataLoad, card, onDeleteCard }) {\r\n\r\n    function handleSubmit(e) {\r\n        e.preventDefault();\r\n        onDeleteCard(card);\r\n    }\r\n\r\n    return (\r\n        <PopupWithForm\r\n            name=\"confirmDeleteCard\"\r\n            id=\"confirm\"\r\n            title=\"Вы уверены?\"\r\n            isOpen={isOpen}\r\n            onClose={onClose}\r\n            submitText={isDataLoad ? 'Удаляем...' : 'Да'}\r\n            onSubmit={handleSubmit}\r\n        />\r\n    )\r\n}\r\n\r\nexport default ConfirmDeletePopup;","import React, { useState } from \"react\";\r\n\r\nexport default function Login({ onLogin }) {\r\n  const initialData = {\r\n    email: '',\r\n    password: '',\r\n  }\r\n\r\n  const [profileData, setProfileData] = useState(initialData);\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target\r\n    setProfileData(profileData => ({\r\n      ...profileData,\r\n      [name]: value\r\n    }));\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault()\r\n\r\n    if (!profileData.password || !profileData.email) {\r\n      return;\r\n    }\r\n\r\n    onLogin(profileData)\r\n  }\r\n\r\n  return (\r\n    <form className=\"login\" onSubmit={handleSubmit}>\r\n      <h1 className=\"login__title\">Вход</h1>\r\n      <input autoComplete=\"on\" className=\"login__email-input\" placeholder=\"Email\" id=\"email\" name=\"email\" type=\"email\" value={profileData.email} onChange={handleChange} minLength=\"2\" maxLength=\"40\" required />\r\n      <input autoComplete=\"on\" className=\"login__password-input\" placeholder=\"Пароль\" id=\"password\" name=\"password\" type=\"password\" value={profileData.password} onChange={handleChange} minLength=\"2\" maxLength=\"40\" required />\r\n      <button className=\"login__button\" type=\"submit\">Войти</button>\r\n    </form>\r\n  )\r\n}\r\n","import React, { useState} from \"react\";\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function Register({ onRegister }) {\r\n  \r\n  const initialData = {\r\n    email: '',\r\n    password: '',\r\n  }\r\n\r\n  const [profileData, setProfileData] = useState(initialData);\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target\r\n    setProfileData(profileData => ({\r\n      ...profileData,\r\n      [name]: value\r\n    }));\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault()\r\n    onRegister(profileData)\r\n  }\r\n\r\n  return (\r\n    <form className=\"register\" onSubmit={handleSubmit}>\r\n      <h1 className=\"register__title\">Регистрация</h1>\r\n      <input autoComplete=\"on\" className=\"register__email-input\" placeholder=\"Email\" id=\"email\" name=\"email\" type=\"email\" value={profileData.email} onChange={handleChange} minLength=\"2\" maxLength=\"40\" required />\r\n      <input autoComplete=\"on\" className=\"register__password-input\" placeholder=\"Пароль\" id=\"password\" name=\"password\" type=\"password\" value={profileData.password} onChange={handleChange} minLength=\"2\" maxLength=\"40\" required />\r\n      <button type=\"submit\" className=\"register__button\">Зарегистрироваться</button>\r\n      <Link to=\"/sign-in\" className=\"register__link\">Уже зарегистрированы? Войти</Link>\r\n    </form>\r\n  )\r\n}\r\n","import React from 'react';\r\n\r\nexport default function InfoTooltip({ onClose, status: { isOpen, successful }}) {\r\n\r\n  return (\r\n    <div className={`popup ${isOpen && 'popup_opened'}`}>\r\n      <div className=\"popup__info\">\r\n        <div className={`popup__status ${successful ? 'popup__status_success' : 'popup__status_fail'}`}></div>\r\n        <h2 className=\"popup__title popup__title_center\">{successful ? 'Вы успешно зарегистрировались!' : 'Что-то пошло не так! Попробуйте еще раз.'}</h2>\r\n        <button type=\"button\" onClick={onClose} className=\"popup__close-button popup__close-button_info\"></button>\r\n      </div>\r\n      <div onClick={onClose} className=\"popup__overlay\"></div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\n\r\nexport default function ProtectedRoute ({ component: Component, ...props }) {\r\n  return (\r\n    <Route>\r\n      {\r\n        () => props.loggedIn ? <Component {...props} /> : <Redirect to=\"./sign-in\" />\r\n      }\r\n    </Route>\r\n  )\r\n}\r\n","export const baseUrl = \"https://auth.nomoreparties.co\";\r\n\r\nexport const register = (email, password) => {\r\n  return fetch(`${baseUrl}/signup`, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Accept': 'application/json',\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({\r\n      email,\r\n      password,\r\n    })\r\n  })\r\n  .then(res => {\r\n    if (res.ok) {\r\n      return res.json();\r\n    }\r\n    return Promise.reject(`Ошибка: ${res.status}`);\r\n  })\r\n};\r\n\r\nexport const login = (email, password) => {\r\n  return fetch(`${baseUrl}/signin`, {\r\n    method: 'POST', \r\n    headers: {\r\n      'Accept': 'application/json',\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({ email, password })\r\n  })\r\n  .then(res => {\r\n    if (res.ok) {\r\n      return res.json();\r\n    }\r\n    return Promise.reject(`Ошибка: ${res.status}`);\r\n  })\r\n};\r\n\r\nexport const checkToken = (token) => {\r\n  return fetch(`${baseUrl}/users/me`, {\r\n    method: 'GET',\r\n    headers: {\r\n      'Accept': 'application/json',\r\n      'Content-Type': 'application/json',\r\n      'Authorization': `Bearer ${token}`\r\n    },\r\n  })\r\n  .then(res => {\r\n    if (res.ok) {\r\n      return res.json();\r\n    }\r\n    return Promise.reject(`Ошибка: ${res.status}`);\r\n  })\r\n};","import React, { useEffect, useState } from \"react\";\r\nimport Header from \"./Header\";\r\nimport Main from \"./Main\";\r\nimport Footer from \"./Footer\";\r\nimport ImagePopup from \"./ImagePopup\";\r\nimport api from \"../utils/api\";\r\nimport CurrentUserContext from '../contexts/CurrentUserContext';\r\nimport EditProfilePopup from './EditProfilePopup';\r\nimport EditAvatarPopup from './EditAvatarPopup';\r\nimport AddPlacePopup from './AddPlacePopup';\r\nimport ConfirmDeletePopup from \"./ConfirmDeletePopup\";\r\nimport Login from \"./Login\";\r\nimport Register from './Register';\r\nimport InfoTooltip from './InfoTooltip';\r\nimport { Route, Switch, Redirect, useHistory } from 'react-router-dom';\r\nimport ProtectedRoute from './ProtectedRoute';\r\nimport * as auth from '../utils/auth';\r\n\r\nfunction App() {\r\n\r\n  const history = useHistory();\r\n\r\n  //! Состояния\r\n  //* Попапы\r\n  const [isEditProfilePopupOpen, setEditProfilePopupOpen] = useState(false);\r\n  const [isAddPlacePopupOpen, setAddPlacePopupOpen] = useState(false);\r\n  const [isEditAvatarPopupOpen, setEditAvatarPopupOpen] = useState(false);\r\n  const [isCardDelete, setIsCardDelete] = useState(false);\r\n  const [isInfoTooltipShow, setInfoTooltipShow] = useState({ isOpen: false, successful: false });\r\n  const [cards, setCards] = useState([]);\r\n  const [loggedIn, setLoggedIn] = useState(false);\r\n  const [profileEmail, setProfileEmail] = useState('')\r\n\r\n  //* Данные\r\n  const [isDataLoad, setIsDataLoad] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [currentUser, setCurrentUser] = useState({});\r\n  const [selectedCard, setSelectedCard] = useState({\r\n    isOpen: false,\r\n    element: {},\r\n  });\r\n  const [selectedCardDelete, setSelectedCardDelete] = useState({\r\n    element: {}\r\n  });\r\n\r\n\r\n  //! Эффекты при монтировании компонентов\r\n\r\n  //* Проверка токена и авторизация пользователя\r\n  useEffect(() => {\r\n    const jwt = localStorage.getItem('jwt');\r\n    if (jwt) {\r\n      auth.checkToken(jwt)\r\n        .then(data => {\r\n          if (data) {\r\n            setProfileEmail(data.data.email)\r\n            setLoggedIn(true)\r\n            history.push('/');\r\n          }\r\n        })\r\n        .catch(err => { console.log(err); })\r\n    }\r\n  }, [history]);\r\n\r\n  //* Получение информации о пользователе\r\n  useEffect(() => {\r\n    setIsLoading(true)\r\n    api.getUserInfo()\r\n      .then(res => { setCurrentUser(res); })\r\n      .catch(err => { console.log(err); })\r\n      .finally(() => { setIsLoading(false) })\r\n  }, []);\r\n\r\n  //* Загрузка карточек\r\n  useEffect(() => {\r\n    setIsLoading(true)\r\n    api.getInitialCards()\r\n      .then(initialCards => {\r\n        setCards(initialCards);\r\n      })\r\n      .catch(err => { console.log(err) })\r\n      .finally(() => { setIsLoading(false) })\r\n  }, []);\r\n\r\n  //! Функции обработчики\r\n  function handleEditAvatarClick() {\r\n    setEditAvatarPopupOpen(!isEditAvatarPopupOpen);\r\n  }\r\n\r\n  function handleDeleteButtonClick(card) {\r\n    setIsCardDelete(!isCardDelete);\r\n    setSelectedCardDelete(card);\r\n  }\r\n\r\n  function handleEditProfileClick() {\r\n    setEditProfilePopupOpen(!isEditProfilePopupOpen);\r\n  }\r\n\r\n  function handleAddPlaceClick() {\r\n    setAddPlacePopupOpen(!isAddPlacePopupOpen);\r\n  }\r\n\r\n  function handleCardClick(card) {\r\n    setSelectedCard({ ...selectedCard, isOpen: true, element: card });\r\n  }\r\n\r\n  function handleInfoTooltip(res) {\r\n    setInfoTooltipShow({ ...isInfoTooltipShow, isOpen: true, successful: res });\r\n  }\r\n\r\n  function closeAllPopups() {\r\n    setEditAvatarPopupOpen(false);\r\n    setEditProfilePopupOpen(false);\r\n    setAddPlacePopupOpen(false);\r\n    setIsCardDelete(false);\r\n    setSelectedCard({ ...selectedCard, isOpen: false });\r\n    setSelectedCardDelete({});\r\n    setIsDataLoad(false);\r\n    setInfoTooltipShow({ isOpen: false, successful: false })\r\n  }\r\n\r\n  function handleCardLike(card) {\r\n    //* Снова проверяем, есть ли уже лайк на данной карточке\r\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\r\n\r\n    //* Отправляем запрос в API и получаем обновлённые данные карточки\r\n\r\n    api.changeCardLike(card._id, isLiked)\r\n      .then((newCard) => {\r\n      //* Обновляем стейт\r\n      setCards((state) => state.map((c) => c._id === card._id ? newCard : c));\r\n    })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  function handleUpdateUser(newUserData) {\r\n    setIsDataLoad(true);\r\n    api.editProfile(newUserData)\r\n      .then(res => { setCurrentUser(res); closeAllPopups() })\r\n      .catch(err => { console.log(err) })\r\n      .finally(() => { setIsDataLoad(false) });\r\n  }\r\n\r\n  function handleUpdateAvatar(newAvatar) {\r\n    setIsDataLoad(true);\r\n    api.editAvatar(newAvatar)\r\n      .then(res => { setCurrentUser(res); closeAllPopups() })\r\n      .catch(err => { console.log(err) })\r\n      .finally(() => { setIsDataLoad(false) });\r\n  }\r\n\r\n  function handleAddPlaceSubmit(newCard) {\r\n    setIsDataLoad(true);\r\n    api.addNewCard(newCard).then((res) => {\r\n      setCards([res, ...cards]); closeAllPopups()\r\n    })\r\n      .catch(err => {\r\n        console.log(err);\r\n      })\r\n      .finally(() => { setIsDataLoad(false) });\r\n  }\r\n\r\n  function handleCardDelete(card) {\r\n    setIsDataLoad(true);\r\n    api.deleteCard(card._id).then(() => {\r\n      const newCards = cards.filter(newCard => newCard._id !== card._id)\r\n      //* Обновляем стейт\r\n      setCards(newCards);\r\n      closeAllPopups()\r\n    })\r\n      .catch(err => {\r\n        console.log(err);\r\n      })\r\n      .finally(() => { setIsDataLoad(false) });\r\n  }\r\n\r\n  //* Вход в систему\r\n  function handleLogin({ email, password }) {\r\n    auth.login(email, password)\r\n      .then(res => {\r\n        if (res.token) {\r\n          setProfileEmail(email)\r\n          setLoggedIn(true);\r\n          localStorage.setItem('jwt', res.token);\r\n          history.push('/')\r\n        }\r\n      })\r\n      .catch(err => {\r\n        handleInfoTooltip(false);\r\n        console.log(err)\r\n      })\r\n  }\r\n\r\n  //* Регистрация пользователя\r\n  function handleRegister({ email, password }) {\r\n    auth.register(email, password)\r\n      .then(data => {\r\n        if (data) {\r\n          handleInfoTooltip(true);\r\n          history.push('/sign-in');\r\n        }\r\n      })\r\n      .catch(err => {\r\n        handleInfoTooltip(false);\r\n        console.log(err);\r\n      })\r\n  }\r\n\r\n  //* Выход из системы\r\n  const handleSignOut = () => {\r\n    localStorage.removeItem('jwt');\r\n    setProfileEmail('')\r\n    setLoggedIn(false);\r\n    history.push('/sign-in');\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <div className=\"page\">\r\n        <div className=\"page__container\">\r\n          <CurrentUserContext.Provider value={currentUser}>\r\n            <Header loggedIn={loggedIn} email={profileEmail} onSignOut={handleSignOut} />\r\n            <Switch>\r\n              <ProtectedRoute\r\n                exact path=\"/\"\r\n                loggedIn={loggedIn}\r\n                component={Main}\r\n                onEditProfile={handleEditProfileClick}\r\n                onAddPlace={handleAddPlaceClick}\r\n                onEditAvatar={handleEditAvatarClick}\r\n                onCardClick={handleCardClick}\r\n                onCardDelete={handleDeleteButtonClick}\r\n                onCardLike={handleCardLike}\r\n                cards={cards}\r\n                loading={isLoading}\r\n              />\r\n              <Route path=\"/sign-up\">\r\n                <Register onRegister={handleRegister} />\r\n              </Route>\r\n              <Route path=\"/sign-in\">\r\n                <Login onLogin={handleLogin} />\r\n              </Route>\r\n              <Route>\r\n                {loggedIn ? <Redirect to=\"/\" /> : <Redirect to=\"/sign-in\" />}\r\n              </Route>\r\n            </Switch>\r\n            <Footer />\r\n            <InfoTooltip onClose={closeAllPopups} status={isInfoTooltipShow} />\r\n            <EditProfilePopup isDataLoad={isDataLoad} onUpdateUser={handleUpdateUser} isOpen={isEditProfilePopupOpen} onClose={closeAllPopups} />\r\n            <AddPlacePopup isDataLoad={isDataLoad} onAddCard={handleAddPlaceSubmit} isOpen={isAddPlacePopupOpen} onClose={closeAllPopups} />\r\n            <EditAvatarPopup isDataLoad={isDataLoad} onUpdateAvatar={handleUpdateAvatar} isOpen={isEditAvatarPopupOpen} onClose={closeAllPopups} />\r\n            <ConfirmDeletePopup card={selectedCardDelete} isDataLoad={isDataLoad} onDeleteCard={handleCardDelete} isOpen={isCardDelete} onClose={closeAllPopups} />\r\n            <ImagePopup card={selectedCard} onClose={closeAllPopups} />\r\n          </CurrentUserContext.Provider>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./components/App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport { HashRouter } from 'react-router-dom';\r\n\r\nReactDOM.render(\r\n  <>\r\n    <HashRouter>\r\n      <App />\r\n    </HashRouter>\r\n  </>,\r\n  document.getElementById(\"root\")\r\n);\r\nreportWebVitals();\r\n"],"sourceRoot":""}